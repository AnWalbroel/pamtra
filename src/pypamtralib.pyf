!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module pyPamtraLib ! in 
    interface  ! in :pyPamtraLib
        module settings ! in :pyPamtraLib:settings.f90
            use kinds
            logical :: jacobian_mode
            integer :: radar_nfft
            character(len=100) :: input_path
            integer(kind=long_bn), optional :: verbose=0
            character(len=8) :: radar_mode
            integer :: radar_no_ave
            real(kind=dbl) :: radar_min_spectral_snr
            character(len=300) :: nc_out_file
            character(len=9) :: frq_str_s
            integer, parameter,optional :: maxnleg=200
            logical :: radar_airmotion
            character(len=9) :: frq_str_e
            real(kind=dbl) :: obs_height
            character(len=1), parameter,optional :: deltam='n'
            logical :: passive
            character(len=2) :: outpol
            integer :: radar_aliasing_nyquist_interv
            logical :: dump_to_file
            integer, parameter,optional :: src_code=2
            logical :: lgas_extinction
            character(len=100) :: crm_data
            real(kind=dbl) :: hydro_threshold
            logical :: lphase_flag
            character(len=1), parameter,optional :: quad_type='l'
            real(kind=dbl) :: radar_k2
            real(kind=dbl) :: radar_airmotion_step_vmin
            character(len=100) :: crm_data2
            character(len=100) :: crm_constants
            integer :: radar_nfft_aliased
            character(len=3) :: gas_mod
            real(kind=dbl) :: radar_noise_distance_factor
            character(len=30) :: radar_fallvel_snow
            logical :: radar_save_noise_corrected_spectra
            integer :: n_moments
            real(kind=dbl) dimension(100) :: freqs
            integer :: radar_maxturbterms
            character(len=30) :: radar_fallvel_hail
            real(kind=dbl) :: radar_airmotion_vmax
            character(len=100) :: output_path
            integer, parameter,optional :: noutlevels=2
            integer, parameter,optional :: numazimuths=1
            character(len=18) :: freq_str
            character(len=20) :: file_desc
            integer(kind=long_bn) :: nfrq
            character(len=30) :: radar_fallvel_rain
            character(len=100) :: creator
            character(len=8) :: radar_airmotion_model
            real(kind=dbl) :: radar_pnoise0
            character(len=100) :: data_path
            integer :: radar_airmotion_linear_steps
            integer, parameter,optional :: aziorder=0
            character(len=300) :: namelist_file
            character(len=1) :: ground_type
            character(len=30) :: radar_fallvel_graupel
            character(len=10) :: crm_case
            logical :: write_nc
            integer, parameter,optional :: nummu=16
            character(len=10) :: input_type
            integer, parameter,optional :: maxv=64
            character(len=100) :: tmp_path
            character(len=1) :: units
            real(kind=dbl), parameter,optional :: direct_mu=0._dbl
            character(len=20) :: moments_file
            real(kind=dbl) :: radar_receiver_uncertainty_std
            character(len=30) :: radar_fallvel_cloud
            integer, parameter,optional :: nstokes=2
            character(len=30) :: radar_fallvel_ice
            character(len=99) :: input_file
            integer, parameter,optional :: maxfreq=100
            real(kind=dbl) :: radar_turbulence_st
            logical :: radar_use_hildebrand
            logical :: radar_convolution_fft
            character(len=300) :: descriptor_file_name
            logical :: active
            integer, parameter,optional :: maxlay=600
            real(kind=dbl) :: radar_max_v
            character(len=8) dimension(100) :: frqs_str
            real(kind=dbl), parameter,optional :: direct_flux=0._dbl
            logical :: in_python
            logical :: lhyd_extinction
            real(kind=dbl) :: radar_airmotion_vmin
            real(kind=dbl) :: salinity
            real(kind=dbl) :: radar_min_v
            integer, parameter,optional :: maxleg=200
            real(kind=dbl) :: emissivity
            subroutine settings_read ! in :pyPamtraLib:settings.f90:settings
                use kinds
            end subroutine settings_read
            subroutine settings_fill_default ! in :pyPamtraLib:settings.f90:settings
                use kinds
            end subroutine settings_fill_default
        end module settings
        module pypamtralib ! in :pyPamtraLib:pyPamtraLib.f90
            use kinds, only: long
            use settings
            use vars_output
            use vars_atmosphere
            use descriptor_file
            use vars_profile
            use report_module
            use double_moments_module
            subroutine run_pamtra ! in :pyPamtraLib:pyPamtraLib.f90:pypamtralib
                use mod_io_strings, only: formatted_frqstr
            end subroutine run_pamtra
        end module pypamtralib
    end interface 
end python module pyPamtraLib

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
